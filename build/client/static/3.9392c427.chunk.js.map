{"version":3,"sources":["webpack:///./src/shared/layout/ErrorBound.jsx"],"names":["ErrorBound","React","Component","constructor","props","super","this","state","hasError","error","componentDidCatch","errorInfo","console","log","render","children"],"mappings":"2HAAA,yDAEA,MAAMA,UAAmBC,IAAMC,UAC7BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CAAEC,UAAU,GAG3B,gCAAgCC,GAE9B,MAAO,CAAED,UAAU,GAGrBE,kBAAkBD,EAAOE,GAEvBC,QAAQC,IAAIJ,EAAOE,GAGrBG,SACE,OAAIR,KAAKC,MAAMC,SAEN,qDAGFF,KAAKF,MAAMW,UAIPf","file":"3.9392c427.chunk.js","sourcesContent":["import React from \"react\";\n\nclass ErrorBound extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBound;\n"],"sourceRoot":""}